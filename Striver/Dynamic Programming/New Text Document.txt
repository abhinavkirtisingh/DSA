# https://leetcode.com/problems/longest-palindromic-subsequence/
# memorization
class Solution:
    def longestPalindromeSubseq(self, s: str) -> int:

        N = len(s)
        dp = [[None for i in range(N)] for j in range(N)]
        def fun(index1,index2):
            if index1 == N or index2 < 0:
                return 0
            if dp[index1][index2] is not None:
                return dp[index1][index2]
            if s[index1] == s[index2]:
                dp[index1][index2] = 1 + fun(index1+1,index2-1)
                return dp[index1][index2]
            dp[index1][index2] = max(fun(index1+1,index2), fun(index1,index2-1))
            return dp[index1][index2]
        
        return fun(0,N-1)